{"version":3,"sources":["login.js"],"names":["document","addEventListener","loginForm","getElementById","emailInput","passwordInput","emailError","passwordError","validateEmail","email","re","test","validatePassword","password","value","textContent","this","classList","remove","add","e","formData","isValid","response","data","regeneratorRuntime","async","_context","prev","next","preventDefault","checked","abrupt","awrap","fetch","method","headers","Content-Type","body","JSON","stringify","sent","json","ok","localStorage","setItem","token","alert","message","t0","console","error","stop","googleLoginBtn","window","log","themeToggle","toggle","isDark","contains","savedTheme","getItem"],"mappings":"aAAAA,SAASC,iBAAiB,mBAAoB,WAC1C,IAAMC,EAAYF,SAASG,eAAe,aADrCF,EAAAA,SAAiBE,eAAoB,SACpCD,EAAoBF,SAACG,eAAe,YACpCC,EAAaJ,SAASG,eAAe,cACrCE,EAAgBL,SAASG,eAAe,iBACxCG,EAAqBN,SAACG,eAAe,eACrCI,EAAgBP,SAASG,eAAe,cAK9C,SAASK,EAAcC,GACbC,MADDF,6BACMG,KAAAF,GAIf,SAASG,EAAiBC,GAA1B,OAA0BA,GAAjBD,EAAAA,OAKTR,EAAWH,iBAAiB,QAAS,WAA1BA,EAAAA,KAAiBa,QAIjBR,EAAAS,YAAA,GACHT,KAAWS,UAAAA,OAAX,WAJCP,EAAcO,YAAa,qCAC5BT,KAAWS,UAAAA,IAAc,YAQjCV,EAAcJ,iBAAiB,QAAS,WAC/BW,EAAiBI,KAAKF,QAIvBP,EAAcQ,YAAd,GACKE,KAAAA,UAALC,OAAsB,WAJtBX,EAAcQ,YAAc,mCACvBE,KAAAA,UAAcE,IAAA,YAQUjB,EAAAD,iBAAA,SAAA,SAAAmB,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAT,EAAAU,iBAAAT,EAAA,CACjCD,MAAEU,EAAFhB,MAKID,SAAUR,EAAcS,MAFtBO,SAJ2BrB,SAIhBG,eAAA,YAAA4B,SAAAT,GAMjB,EACIA,EAX6BD,EAAAZ,SAc7BH,EAAWS,YAAc,qCAD7BO,GAAKd,GAGJI,EAAAS,EAAAR,YAGGN,EAAcQ,YAAc,mCADhCO,GAAKV,GAGJU,EArBgC,CAAAK,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAK,OAAA,UAAA,KAAA,EAAA,OAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAAAJ,mBAAAQ,MAAAC,MAAA,aAAA,CAAAC,OAAA,OA6BzBC,QAAS,CA7BgBC,eAAA,oBAAAC,KAAAC,KAAAC,UAAAnB,MAAA,KAAA,GAAA,OAAAE,EAAAI,EAAAc,KAAAd,EAAAE,KAAA,GAAAJ,mBAAAQ,MAAAV,EAAAmB,QAAA,KAAA,GAAAlB,EAAAG,EAAAc,KA6BzBL,EAASO,IAF8BC,aAAAC,QAAA,QAAArB,EAAAsB,OAKvCR,OAAMC,SAAKC,KAAUnB,cAhCI0B,MAAAvB,EAAAwB,SAAA,mBAAArB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAsB,GAAAtB,EAAA,MAAA,GAAAuB,QAAAC,MAAA,gBAAAxB,EAAAsB,IA+C7BF,MAAM,2CA/CuB,KAAA,GAAA,IAAA,MAAA,OAAApB,EAAAyB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,QAsCzBC,EAAApD,iBAAA,QAAA,WAEAqD,QAAAA,IAAM,mCAGNP,EAAAA,iBAAM,QAAgB,WAgB9BG,QAAQK,IAAI,oCA3DqB,IAAAC,YAAAxD,SAAAG,eAAA,eAAAqD,aA8C7BN,YAAAA,iBAAc,QAAd,WACAH,SAAKT,KAACrB,UAAAwC,OAAA,QAqBV,IAAMC,EAAS1D,SAASsC,KAAKrB,UAAU0C,SAAS,QApEff,aAAAC,QAAA,QAAAa,EAAA,OAAA,WAAA,IAAAE,WAAAhB,aAAAiB,QAAA,SAArCD,YA4EA5D,SAASsC,KAAKrB,UAAUwC,OAAO,OAAuB,SAAfG","file":"login.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n    const loginForm = document.getElementById('loginForm');\n    const emailInput = document.getElementById('email');\n    const passwordInput = document.getElementById('password');\n    const emailError = document.getElementById('emailError');\n    const passwordError = document.getElementById('passwordError');\n    const googleLoginBtn = document.getElementById('googleLogin');\n    const appleLoginBtn = document.getElementById('appleLogin');\n\n    // Form doğrulama fonksiyonları\n    function validateEmail(email) {\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return re.test(email);\n    }\n\n    function validatePassword(password) {\n        return password.length >= 6;\n    }\n\n    // Input alanları için anlık doğrulama\n    emailInput.addEventListener('input', function() {\n        if (!validateEmail(this.value)) {\n            emailError.textContent = 'Geçerli bir e-posta adresi giriniz';\n            this.classList.add('error');\n        } else {\n            emailError.textContent = '';\n            this.classList.remove('error');\n        }\n    });\n\n    passwordInput.addEventListener('input', function() {\n        if (!validatePassword(this.value)) {\n            passwordError.textContent = 'Şifre en az 6 karakter olmalıdır';\n            this.classList.add('error');\n        } else {\n            passwordError.textContent = '';\n            this.classList.remove('error');\n        }\n    });\n\n    // Form gönderimi\n    loginForm.addEventListener('submit', async function(e) {\n        e.preventDefault();\n\n        // Form verilerini al\n        const formData = {\n            email: emailInput.value,\n            password: passwordInput.value,\n            remember: document.getElementById('remember').checked\n        };\n\n        // Form doğrulama\n        let isValid = true;\n\n        if (!validateEmail(formData.email)) {\n            emailError.textContent = 'Geçerli bir e-posta adresi giriniz';\n            isValid = false;\n        }\n\n        if (!validatePassword(formData.password)) {\n            passwordError.textContent = 'Şifre en az 6 karakter olmalıdır';\n            isValid = false;\n        }\n\n        if (!isValid) return;\n\n        try {\n            // Backend'e gönderilecek istek\n            const response = await fetch('/api/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formData)\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                // Başarılı giriş\n                localStorage.setItem('token', data.token);\n                window.location.href = '/dashboard'; // Kullanıcıyı dashboard'a yönlendir\n            } else {\n                // Hata mesajını göster\n                alert(data.message || 'Giriş başarısız');\n            }\n        } catch (error) {\n            console.error('Giriş hatası:', error);\n            alert('Bir hata oluştu. Lütfen tekrar deneyin.');\n        }\n    });\n\n    // Sosyal medya girişleri\n    googleLoginBtn.addEventListener('click', function() {\n        // Google OAuth entegrasyonu\n        console.log('Google ile giriş yapılıyor...');\n    });\n\n    appleLoginBtn.addEventListener('click', function() {\n        // Apple OAuth entegrasyonu\n        console.log('Apple ile giriş yapılıyor...');\n    });\n});\n\n// Tema değiştirme işlevi\nconst themeToggle = document.getElementById('themeToggle');\nif (themeToggle) {\n    themeToggle.addEventListener('click', () => {\n        document.body.classList.toggle('dark');\n        const isDark = document.body.classList.contains('dark');\n        localStorage.setItem('theme', isDark ? 'dark' : 'light');\n    });\n}\n\n// Sayfa yüklendiğinde tema tercihini kontrol et\nconst savedTheme = localStorage.getItem('theme');\nif (savedTheme) {\n    document.body.classList.toggle('dark', savedTheme === 'dark');\n}"]}